{"ast":null,"code":"import _classCallCheck from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/Components/LogoutDialogComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nvar LogoutDialogComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogoutDialogComponent, _Component);\n\n  function LogoutDialogComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogoutDialogComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogoutDialogComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogoutDialogComponent, [{\n    key: \"render\",\n    value: function render() {\n      var fullScreen = this.props.fullScreen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        onClick: this.handleClickOpen,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ExitToAppIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Cerrar sesion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Disagree\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Agree\"))));\n    }\n  }]);\n\n  return LogoutDialogComponent;\n}(Component);\n\nLogoutDialogComponent.propTypes = {\n  fullScreen: PropTypes.bool.isRequired\n};\nexport default withMobileDialog()(LogoutDialogComponent);","map":{"version":3,"sources":["/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/Components/LogoutDialogComponent.js"],"names":["React","Component","PropTypes","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","withMobileDialog","ListItem","ListItemIcon","ListItemText","ExitToAppIcon","LogoutDialogComponent","state","open","handleClickOpen","setState","handleClose","fullScreen","props","propTypes","bool","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;IAEMC,qB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;UAEDG,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,UACCI,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOM,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,OAAO,EAAE,KAAKH,eAA/B;AAAgD,QAAA,IAAI,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,CADM,EAEN,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM,CAPN,EAaA,oBAAC,MAAD;AACA,QAAA,UAAU,EAAEG,UADZ;AAEA,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,IAFjB;AAGA,QAAA,OAAO,EAAE,KAAKG,WAHd;AAIA,2BAAgB,yBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C,gCAA3C,CANA,EAOA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADA,CAPA,EAaA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAIA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAmD,QAAA,SAAS,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJA,CAbA,CAbA,CADF;AAsCD;;;;EAtDiClB,S;;AAyDpCa,qBAAqB,CAACQ,SAAtB,GAAkC;AAChCF,EAAAA,UAAU,EAAElB,SAAS,CAACqB,IAAV,CAAeC;AADK,CAAlC;AAIA,eAAef,gBAAgB,GAAGK,qBAAH,CAA/B","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nclass LogoutDialogComponent extends Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { fullScreen } = this.props;\n\n    return (\n      <div>\n\n\n\n\n\n\n            <ListItem button onClick={this.handleClickOpen} size=\"small\">\n      <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n      <ListItemText primary=\"Cerrar sesion\" /></ListItem>\n\n\n\n      <Dialog\n      fullScreen={fullScreen}\n      open={this.state.open}\n      onClose={this.handleClose}\n      aria-labelledby=\"responsive-dialog-title\"\n      >\n      <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n      <DialogContent>\n      <DialogContentText>\n      Let Google help apps determine location. This means sending anonymous location data to\n      Google, even when no apps are running.\n      </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n      <Button onClick={this.handleClose} color=\"primary\">\n      Disagree\n      </Button>\n      <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n      Agree\n      </Button>\n      </DialogActions>\n      </Dialog>\n      </div>\n      );\n  }\n}\n\nLogoutDialogComponent.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n};\n\nexport default withMobileDialog()(LogoutDialogComponent);\n"]},"metadata":{},"sourceType":"module"}