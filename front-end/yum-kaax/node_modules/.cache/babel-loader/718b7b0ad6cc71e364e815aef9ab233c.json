{"ast":null,"code":"var _jsxFileName = \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/views/dashboard/index.js\";\nimport React from 'react';\nimport { Dot, Polygon } from 'recharts';\nvar RADIAN = Math.PI / 180;\n\nvar Dashboard = function Dashboard(_ref) {\n  var radar = _ref.radar;\n  var radius = radar.radius,\n      cx = radar.cx,\n      cy = radar.cy,\n      innerRadius = radar.innerRadius,\n      outerRadius = radar.outerRadius,\n      startAngle = radar.startAngle,\n      clockWise = radar.clockWise;\n  var sign = clockWise ? -1 : 1;\n  var angleInterval = 360 / radius.length;\n  var points = radar.radius.map(function (v, i) {\n    return {\n      x: cx + Math.cos(-(startAngle + i * sign * angleInterval) * RADIAN) * v,\n      y: cy + Math.sin(-(startAngle + i * sign * angleInterval) * RADIAN) * v\n    };\n  });\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Polygon, {\n    fill: \"#A5D297\",\n    fillOpacity: 0.3,\n    stroke: \"#8DC77B\",\n    strokeWidth: 2,\n    points: points,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), points.map(function (v, i) {\n    return React.createElement(Dot, {\n      key: i,\n      cx: v.x,\n      cy: v.y,\n      r: 6,\n      fill: \"#8889DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/views/dashboard/index.js"],"names":["React","Dot","Polygon","RADIAN","Math","PI","Dashboard","radar","radius","cx","cy","innerRadius","outerRadius","startAngle","clockWise","sign","angleInterval","length","points","map","v","i","x","cos","y","sin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,UAA7B;AAEA,IAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAAA,MACvBC,MADuB,GAC6CD,KAD7C,CACvBC,MADuB;AAAA,MACfC,EADe,GAC6CF,KAD7C,CACfE,EADe;AAAA,MACXC,EADW,GAC6CH,KAD7C,CACXG,EADW;AAAA,MACPC,WADO,GAC6CJ,KAD7C,CACPI,WADO;AAAA,MACMC,WADN,GAC6CL,KAD7C,CACMK,WADN;AAAA,MACmBC,UADnB,GAC6CN,KAD7C,CACmBM,UADnB;AAAA,MAC+BC,SAD/B,GAC6CP,KAD7C,CAC+BO,SAD/B;AAE/B,MAAMC,IAAI,GAAGD,SAAS,GAAG,CAAC,CAAJ,GAAQ,CAA9B;AACA,MAAME,aAAa,GAAG,MAAMR,MAAM,CAACS,MAAnC;AAEA,MAAMC,MAAM,GAAGX,KAAK,CAACC,MAAN,CAAaW,GAAb,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAW;AACzCC,MAAAA,CAAC,EAAEb,EAAE,GAAGL,IAAI,CAACmB,GAAL,CAAS,EAAEV,UAAU,GAAGQ,CAAC,GAAGN,IAAJ,GAAWC,aAA1B,IAA2Cb,MAApD,IAA8DiB,CAD7B;AAEzCI,MAAAA,CAAC,EAAEd,EAAE,GAAGN,IAAI,CAACqB,GAAL,CAAS,EAAEZ,UAAU,GAAGQ,CAAC,GAAGN,IAAJ,GAAWC,aAA1B,IAA2Cb,MAApD,IAA8DiB;AAF7B,KAAX;AAAA,GAAjB,CAAf;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAE,GAFf;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,WAAW,EAAE,CAJf;AAKE,IAAA,MAAM,EAAEF,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASIA,MAAM,CAACC,GAAP,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,WAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,EAAE,EAAED,CAAC,CAACE,CAAnB;AAAsB,MAAA,EAAE,EAAEF,CAAC,CAACI,CAA5B;AAA+B,MAAA,CAAC,EAAE,CAAlC;AAAqC,MAAA,IAAI,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CATJ,CADF;AAgBD,CA1BD;;AA4BA,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport { Dot, Polygon } from 'recharts';\n\nconst RADIAN = Math.PI / 180;\n\nconst Dashboard = ({ radar }) => {\n  const { radius, cx, cy, innerRadius, outerRadius, startAngle, clockWise } = radar;\n  const sign = clockWise ? -1 : 1;\n  const angleInterval = 360 / radius.length;\n\n  const points = radar.radius.map((v, i) => ({\n    x: cx + Math.cos(-(startAngle + i * sign * angleInterval) * RADIAN) * v,\n    y: cy + Math.sin(-(startAngle + i * sign * angleInterval) * RADIAN) * v,\n  }));\n\n  return (\n    <g>\n      <Polygon\n        fill=\"#A5D297\"\n        fillOpacity={0.3}\n        stroke=\"#8DC77B\"\n        strokeWidth={2}\n        points={points}\n      />\n      {\n        points.map((v, i) => {\n          return <Dot key={i} cx={v.x} cy={v.y} r={6} fill=\"#8889DD\" />;\n        })\n      }\n    </g>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}