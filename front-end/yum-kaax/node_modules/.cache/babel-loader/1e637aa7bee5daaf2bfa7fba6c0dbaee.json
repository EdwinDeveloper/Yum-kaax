{"ast":null,"code":"import _classCallCheck from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/views/dashboard/index.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var data = [{\n        name: 'Magnesio',\n        Actual: 4000,\n        Faltante: 2400,\n        amt: 2400,\n        value: Math.random()\n      }, {\n        name: 'Potasio',\n        Actual: 3000,\n        Faltante: 1398,\n        amt: 2210,\n        value: Math.random()\n      }, {\n        name: 'Zinc',\n        Actual: 2000,\n        Faltante: 9800,\n        amt: 2290,\n        value: Math.random()\n      }, {\n        name: 'Sal',\n        Actual: 2780,\n        Faltante: 3908,\n        amt: 2000,\n        value: Math.random()\n      }];\n\n      var getPercent = function getPercent(value, total) {\n        var ratio = total > 0 ? value / total : 0;\n        return toPercent(ratio, 1);\n      };\n\n      var toPercent = function toPercent(decimal) {\n        var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return \"\".concat((decimal * 1 / 2000).toFixed(fixed), \" g/l\");\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickFormatter: toPercent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"Actual\",\n        stackId: \"a\",\n        fill: \"#8bc34a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"Faltante\",\n        stackId: \"a\",\n        fill: \"#D0AA02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/y2kevin/Desktop/yum-kaax/Yum-kaax/front-end/yum-kaax/src/views/dashboard/index.js"],"names":["React","Component","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Dashboard","data","name","Actual","Faltante","amt","value","Math","random","getPercent","total","ratio","toPercent","decimal","fixed","toFixed","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass Dashboard extends Component {\n\n\n  render() {\nconst data = [\n      {name: 'Magnesio', Actual: 4000, Faltante: 2400, amt: 2400, value: Math.random()},\n      {name: 'Potasio', Actual: 3000, Faltante: 1398, amt: 2210, value: Math.random()},\n      {name: 'Zinc', Actual: 2000, Faltante: 9800, amt: 2290, value: Math.random()},\n      {name: 'Sal', Actual: 2780, Faltante: 3908, amt: 2000, value: Math.random()},\n\n];\n\n\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 1);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n  return `${((decimal * 1)/2000).toFixed(fixed)} g/l`;\n};\n\n    return (\n      <div>\n\n      <BarChart width={500} height={300} data={data}\n            margin={{top: 20, right: 30, left: 20, bottom: 5}}>\n       <CartesianGrid strokeDasharray=\"3 5\"/>\n       <XAxis dataKey=\"name\"/>\n       <YAxis tickFormatter={toPercent}/>\n       <Tooltip/>\n       <Legend />\n       <Bar dataKey=\"Actual\" stackId=\"a\" fill=\"#8bc34a\" />\n       <Bar dataKey=\"Faltante\" stackId=\"a\" fill=\"#D0AA02\" />\n      </BarChart>\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}